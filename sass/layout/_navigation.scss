.navigation {
  &__checkbox {
    display: none;
  }

  &__button {
    background-color: $color-white;
    height: 7rem;
    width: 7rem;
    border-radius: 50%; // User to make a Circle.
    position: fixed;
    top: 6rem;
    right: 6rem;
    z-index: 2000;
    box-shadow: 0 1rem 3rem rgba($color-black, .1);
    text-align: center;
    cursor: pointer;

    @include respond(tab-port) {
      top: 4rem;
      right: 4rem;
    }

    @include respond(phone) {
      top: 3rem;
      right: 3rem;
    }
  }

  &__background {
    height: 6rem;
    width: 6rem;
    border-radius: 50%; // User to make a Circle.
    position: fixed;
    top: 6.5rem;
    right: 6.5rem;
    background-image: radial-gradient($color-primary-light, $color-primary-dark);
    z-index: 1000;

    // cubic-bezier is custom timing function. Similar to built in ease-in, ease-out etc.
    transition: transform .8s cubic-bezier(0.85, 0, 0.15, 1);

    @include respond(tab-port) {
      top: 4.5rem;
      right: 4.5rem;
    }

    @include respond(phone) {
      top: 3.5rem;
      right: 3.5rem;
    }
  }

  &__nav {
    position: fixed;
    top: 0;
    right: 0;
    z-index: 1500;
    transition: all .8s cubic-bezier(0.68, -0.6, 0.32, 1.6);

    // Following styles used as a trick to hide the nav section.
    opacity: 0;
    width: 0;
  }

  &__list {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 50%);
    list-style: none;
    text-align: center;
    width: 100%;
  }

  &__item {
    margin: 1rem;
  }

  &__link {

    &:link,
    &:visited {
      display: inline-block;
      padding: 1rem 2rem;
      font-size: 3rem;
      font-weight: 300;
      color: $color-white;
      text-decoration: none;
      text-transform: uppercase;
      background-image: linear-gradient(120deg, transparent 0%,  transparent 50%, $color-white 50%);
      background-size: 220%;
      transition: all .4s;

      span {
        margin-right: 1.5rem;
        display: inline-block;
      }
    }

    &:hover,
    &:active {
      background-position: 100%;
      color: $color-primary;
      transform: translateX(1rem);
    }
  }

  // Select background element when the check box is checked.
  // Selector "~" used to select any element with the indicated class that is after the first indicated element.
  // Button animation.
  &__checkbox:checked ~ &__background {
    transform: scale(80);
  }

  // Select nav element when the check box is checked.
  &__checkbox:checked ~ &__nav {
    opacity: 1;
    width: 100%;
  }

  // Button icon.
  &__icon {
    position: relative;
    margin-top: 3.5rem;

    &,
    &::before,
    &::after {
      width: 3rem;
      height: 2px;
      background-color: $color-grey-dark-3;
      display: inline-block;
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      left: 0;
      transition: all .2s;
    }

    &::before {
      top: -.8rem;
    }

    &::after {
      top: .8rem;
    }
  }

  // Select icon before element when button hover.
  &__button:hover &__icon::before {
    top: -1rem;
  }

  // Select icon after element when button hover.
  &__button:hover &__icon::after {
    top: 1rem;
  }

  // Select icon when the check box is checked.
  // Select adjacent sibling ('+')
  &__checkbox:checked + &__button &__icon {
    // Used to hide the element, while keeping before and after elements not affecting.
    // Since  before and after elements depends on this element we can't hide or set
    // width to 0;
    background-color: transparent;
  }

  &__checkbox:checked + &__button &__icon::before {
    top: 0;
    transform: rotate(135deg);
  }

  &__checkbox:checked + &__button &__icon::after {
    top: 0;
    transform: rotate(-135deg);
  }
}