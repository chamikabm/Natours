.popup {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  background-color: rgba($color-black, .8);
  z-index: 9999;

  // Initial state to help animate.
  opacity: 0;
  visibility: hidden;

  /*
   NOTE: Graceful Degradation  Example:
   s
   We can use "supports" to test certain properties on a browser and, it it is working
   then we can ask to apply the code inside the "supports" block. That way we can design
   default behaviour in top and we can override new features inside the "supports" block.

   In this example we have added "backdrop" filter, which is for the moment only works for
   the safari, not in google chrome. So that we can test the backdrop property and if it is
   working then the code inside supports will get applied.

   If not above "background-color: rgba($color-black, .8);" will get applied.
   */

  @supports (-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
    -webkit-backdrop-filter: blur(10px); // For Chrome and Safari
    backdrop-filter: blur(10px);
    background-color: rgba($color-black, .3); // Override the above "background-color: rgba($color-black, .8);"
  }

  transition: all .3s;

  &__content  {
    @include absCenter;
    width: 75%;
    background-color: $color-white;
    box-shadow: 0 2rem 4rem rgba($color-black, .2);
    border-radius: 3px;
    overflow: hidden; // This will be used to hide the overflowed image from above border radius.
    transition: all .4s .2s; // Last .2s is the delay

    // We use are simulating a table without floats in order to keep both left and
    // right sections heights are same.
    display: table;

    // Initial state to help animate.
    opacity: 0;
    // We have to include translate(-50%, -50%) into initial state, because having only one
    // transform [i.e : scale(.5)] will overrider the translate(-50%, -50%) transform
    // in the "absCenter" mixin. Hence we need to include that as well.
    transform: translate(-50%, -50%) scale(.25); // We have to include the
  }

  &__left {
    width: 33.3333333%;
    //float: left;
    // We use are simulating a table without floats in order to keep both left and
    // right  sections heights are same.
    display: table-cell;
    vertical-align: middle;
  }

  &__right {
    width: 66.6666667%;
    padding: 3rem 5rem;
    //float: left;
    // We use are simulating a table without floats in order to keep both left and
    // right  sections heights are same.
    display: table-cell;
    vertical-align: middle; // This property used to vertically center content in table cell
  }

  &__img {
    display: block;
    width: 100%;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;

    //  These are  new css properties
    -moz-column-count: 2;
    -moz-column-gap: 4rem;
    -moz-column-rule: 1px solid $color-grey-light-2;
    -webkit-column-count: 2;
    -webkit-column-gap: 4rem;
    -webkit-column-rule: 1px solid $color-grey-light-2;
    column-count: 2;
    column-gap: 4rem;
    column-rule: 1px solid $color-grey-light-2;

    //  These are  new css properties
    -moz-hyphens: auto; // Firefox
    -webkit-hyphens: auto; // Chrome
    -ms-hyphens: auto; // Edge
    hyphens: auto;
  }


  // When url changes to target element (i.e : http://127.0.0.1:8080/#popup)
  // When the popup becomes target
  &:target {
    opacity: 1;
    visibility: visible;
  }

  // When the popup becomes target select content
  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      line-height: 1;
    }

    &:hover,
    &:active {
      color: $color-primary;
    }
  }
}